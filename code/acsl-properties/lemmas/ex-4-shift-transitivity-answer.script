(* Generated by Frama-C WP *)

Goal typed_lemma_shift_ptr.
Hint property,shift_ptr.
Proof.
  intros fst lst s1 s2 ; intros M1 M2 array tM1 tM2.
  split ; intros H i ; intros ; unfold P_shifted in H.
  + assert (exists pi, i = pi+s1) by (exists (i-s1) ; omega).
    inversion H2 ; subst.
    replace (M2 .[ shift_sint32 array (x + s1)])
       with (M2 .[ shift_sint32 (shift_sint32 array s1) x]).
    rewrite <- H by omega.
    - unfold shift_sint32 ; unfold shift ; destruct array ; simpl.
      replace (z0 + (s2 + (x + s1))) with (z0 + s1 + (s2 + x)) by omega.
      auto.
    - unfold shift_sint32 ; unfold shift ; destruct array ; simpl.
      replace (z0 + s1 + x) with (z0 + (x + s1)) by omega.
      auto.
  + replace (M2 .[ shift_sint32 (shift_sint32 array s1) i])
       with (M2 .[ shift_sint32 array (s1 + i)]).
    rewrite <- H by omega.
    - unfold shift_sint32 ; unfold shift ; destruct array ; simpl.
      replace (z0 + s1 + (s2 + i)) with (z0 + (s2 + (s1 + i))) by omega.
      auto.
    - unfold shift_sint32 ; unfold shift ; destruct array ; simpl.
      replace (z0 + s1 + i) with (z0 + (s1 + i)) by omega.
      auto.
Qed.


